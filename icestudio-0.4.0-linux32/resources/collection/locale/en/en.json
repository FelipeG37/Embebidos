{"en":{"0":"0","1":"1","Bit":"Bit","Logic":"Logic","Setup":"Setup","Assign 0 to the output wire":"Assign 0 to the output wire","Assign 1 to the output wire":"Assign 1 to the output wire","Combinational":"Combinational","Gate":"Gate","Sequential":"Sequential","Mux 2:1":"Mux 2:1","Multiplexer 2:1":"Multiplexer 2:1","AND":"AND","AND logic gate":"AND logic gate","NAND":"NAND","NAND logic gate":"NAND logic gate","NOR":"NOR","NOR logic gate":"NOR logic gate","NOT":"NOT","NOT logic gate":"NOT logic gate","OR":"OR","OR logic gate":"OR logic gate","XNOR":"XNOR","XNOR logic gate":"XNOR logic gate","XOR":"XOR","XOR logic gate":"XOR logic gate","Debouncer":"Debouncer","Remove the rebound on a mechanical switch":"Remove the rebound on a mechanical switch","Flip-flop D":"Flip-flop D","Delay flip-flop":"Delay flip-flop","Flip-flop T":"Flip-flop T","Toggle flip-flop":"Toggle flip-flop","Prescaler22":"Prescaler22","22-bits prescaler":"22-bits prescaler","Parametric N-bits prescaler":"Parametric N-bits prescaler","PrescalerN":"PrescalerN","Pull-up":"Pull-up","FPGA internal pull-up configuration on the connected input port":"FPGA internal pull-up configuration on the connected input port","Tri-state":"Tri-state","Tri-state logic block":"Tri-state logic block","1. Basic":"1. Basic","2. Flip-flops":"2. Flip-flops","3. Gates":"3. Gates","4. Muxes":"4. Muxes","5. Markdown":"5. Markdown","6. Verilog":"6. Verilog","01. One LED":"01. One LED","Turn on a LED":"Turn on a LED","02. Two LEDs":"02. Two LEDs","Turn on two LEDs":"Turn on two LEDs","03. Three LEDs":"03. Three LEDs","Turn on three LEDs":"Turn on three LEDs","04. One LED blink":"04. One LED blink","Blinking LED":"Blinking LED","05. Two LEDs alternate blink":"05. Two LEDs alternate blink","LEDs 0 and 7 are blinking alternatively":"LEDs 0 and 7 are blinking alternatively","06. Pushbutton and LED":"06. Pushbutton and LED","One pushbutton for turning the LED on and off":"One pushbutton for turning the LED on and off","01. DFF manual load":"01. DFF manual load","The LED is turned on when the pushbutton is pressed":"The LED is turned on when the pushbutton is pressed","02. Chain of three DFFs":"02. Chain of three DFFs","A chain of three D flip-flops\nThe LEDs are turned on secuentially, with every click on the button":"A chain of three D flip-flops\nThe LEDs are turned on secuentially, with every click on the button","03. Ring of four DFFs":"03. Ring of four DFFs","A ring of four D flip-flops\nThe sequence is shown in the LEDs":"A ring of four D flip-flops\nThe sequence is shown in the LEDs","04. Toggle button":"04. Toggle button","When the pushbutton is clicked the LED changes":"When the pushbutton is clicked the LED changes","05. Binary counter with three TFFs":"05. Binary counter with three TFFs","A 3-bit binary counter with T flip-flops":"A 3-bit binary counter with T flip-flops","01. AND gate":"01. AND gate","Testing the AND gate":"Testing the AND gate","02. OR gate":"02. OR gate","Testing the OR gate":"Testing the OR gate","03. AND truth table":"03. AND truth table","Truth table of the AND gate":"Truth table of the AND gate","04. OR truth table":"04. OR truth table","Truth table of the OR gate":"Truth table of the OR gate","05. SR latch":"05. SR latch","An SR-latch implemented with logic gates":"An SR-latch implemented with logic gates","06. D latch":"06. D latch","A D latch implemented with logic gates":"A D latch implemented with logic gates","07. D flip-flop":"07. D flip-flop","Master Latch":"Master Latch","Slave latch":"Slave latch","A D flip-flip with a falling-edge trigger implemented with logic gates":"A D flip-flip with a falling-edge trigger implemented with logic gates","08. Multiplexer 2:1":"08. Multiplexer 2:1","Mux 2:1 implemented with logic gates\nThe LED0 blinks or is turned on depending on the pushbutton 1":"Mux 2:1 implemented with logic gates\nThe LED0 blinks or is turned on depending on the pushbutton 1","Mux 2:1 with logic gates":"Mux 2:1 with logic gates","Signal for blinking the LED":"Signal for blinking the LED","Fixed signal for turning on the LED":"Fixed signal for turning on the LED","09. Decoder 2:4":"09. Decoder 2:4","2 to 4 bits decoder with logic gates":"2 to 4 bits decoder with logic gates","10. One bit adder":"10. One bit adder","1-bit adder":"1-bit adder","01. Blinking fixed LED":"01. Blinking fixed LED","Blinking/fixed LED\nThe toggle button selects if the LED blinks or stays turned on":"Blinking/fixed LED\nThe toggle button selects if the LED blinks or stays turned on","02. LED three states":"02. LED three states","The LED has three modes of operation: blinking, turned on an turned off\nSW2 pushbutton determines if the LED blinks/stays fixed\nSW1 pushbutton determines the LED state (on or off), in fixed mode":"The LED has three modes of operation: blinking, turned on an turned off\nSW2 pushbutton determines if the LED blinks/stays fixed\nSW1 pushbutton determines the LED state (on or off), in fixed mode","03. Multiplexer 4:1":"03. Multiplexer 4:1","A 4:1 mux from two 2:1 muxes\nThe LED can be in four states: off, blinking, on, blinking fast":"A 4:1 mux from two 2:1 muxes\nThe LED can be in four states: off, blinking, on, blinking fast","04. Shift register":"04. Shift register","4 bits shift register. It is loaded with the initial value 1000 and then\nshifted on every clock pulse":"4 bits shift register. It is loaded with the initial value 1000 and then\nshifted on every clock pulse","Binary value to load and shift":"Binary value to load and shift","Initializer. It has the initial value 0, so that the\ni0 is selected in all the muxes. The register is loaded.\nIn the next cycle, it has the value 1, so the i1 input\nis selected in all the muxes. The register is shifted.\nIn the next cycles it will remain in the shift state":"Initializer. It has the initial value 0, so that the\ni0 is selected in all the muxes. The register is loaded.\nIn the next cycle, it has the value 1, so the i1 input\nis selected in all the muxes. The register is shifted.\nIn the next cycles it will remain in the shift state","01. Headers list fonts":"01. Headers list fonts","# Markdown example\n\nThis is an example of an information block written in markdown  \nJust doble-click on this note to edit it  \n\n## Font styles\n\nIn markdown you can write in **bold** or *italic* font very easily  \n\n## List\n\nExample of lists\n\n### unordered\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n### ordered\n\n1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n":"# Markdown example\n\nThis is an example of an information block written in markdown  \nJust doble-click on this note to edit it  \n\n## Font styles\n\nIn markdown you can write in **bold** or *italic* font very easily  \n\n## List\n\nExample of lists\n\n### unordered\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n### ordered\n\n1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n","02. Links and images":"02. Links and images","### Link example\n\nYou can find **more information** about Markdown in this page: [Mastering markdown](https://guides.github.com/features/mastering-markdown/)":"### Link example\n\nYou can find **more information** about Markdown in this page: [Mastering markdown](https://guides.github.com/features/mastering-markdown/)","### Images :smiley:\n\nIt is also possible to include images, but they are only rendered if there is internet connection\n":"### Images :smiley:\n\nIt is also possible to include images, but they are only rendered if there is internet connection\n","**PNG image**":"**PNG image**","![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/png/icestudio-logo.png)":"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/png/icestudio-logo.png)","![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/icestudio-logo.svg?sanitize=true)\n":"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/icestudio-logo.svg?sanitize=true)\n","**SVG image**":"**SVG image**","![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/raw/master/wiki/Tutorial-24/ejemplos-digitos-10.gif)":"![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/raw/master/wiki/Tutorial-24/ejemplos-digitos-10.gif)","**Animated GIF**":"**Animated GIF**","03. Tables":"03. Tables","Puerta AND":"Puerta AND","First Header | Second Header\n------------ | -------------\nContent from cell 1 | Content from cell 2\nContent in the first column | Content in the second column":"First Header | Second Header\n------------ | -------------\nContent from cell 1 | Content from cell 2\nContent in the first column | Content in the second column","## Tables\n\nTables are really helpfull":"## Tables\n\nTables are really helpfull","a | b | AND\n--|---|------\n0 | 0 | 0 \n0 | 1 | 0\n1 | 0 | 0\n1 | 1 | 1\n":"a | b | AND\n--|---|------\n0 | 0 | 0 \n0 | 1 | 0\n1 | 0 | 0\n1 | 1 | 1\n","**AND truth table**":"**AND truth table**","**a**  \n  \n**b**":"**a**  \n  \n**b**","**Output**":"**Output**","04. Code task list":"04. Code task list","## Code\n\n":"## Code\n\n","```verilog\nreg [7:0] value;\n\nalways @(posedge clk)\n  value <= value + 1;\n```":"```verilog\nreg [7:0] value;\n\nalways @(posedge clk)\n  value <= value + 1;\n```","```javascript\nfunction fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:":"```javascript\nfunction fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:","- [x] Task 1\n- [x] Task 2\n- [x] Task 3\n- [ ] this is an incomplete item\n":"- [x] Task 1\n- [x] Task 2\n- [x] Task 3\n- [ ] this is an incomplete item\n","**Verilog**":"**Verilog**","**Javascript**":"**Javascript**","## Task lists\n\n":"## Task lists\n\n","05. Youtube videos":"05. Youtube videos","# Youtube Videos":"# Youtube Videos","It is possible to link to youtube videos just by adding a  \n**standard link** to it:  [https://www.youtube.com/watch?v=boXZusFCCIU](Video)":"It is possible to link to youtube videos just by adding a  \n**standard link** to it:  [https://www.youtube.com/watch?v=boXZusFCCIU](Video)","or you can include the **video thumbnail** along with the **link** for playing it in  \nthe browser\n\n[![Click to see the youtube video](http://img.youtube.com/vi/boXZusFCCIU/0.jpg)](https://www.youtube.com/watch?v=boXZusFCCIU)":"or you can include the **video thumbnail** along with the **link** for playing it in  \nthe browser\n\n[![Click to see the youtube video](http://img.youtube.com/vi/boXZusFCCIU/0.jpg)](https://www.youtube.com/watch?v=boXZusFCCIU)","01. Four bits fixed binary value":"01. Four bits fixed binary value","Displaying a 4-bits fixed value in the LEDs":"Displaying a 4-bits fixed value in the LEDs","02. Four bits fixed hexadecimal value":"02. Four bits fixed hexadecimal value","Displaying a 4-bits fixed value (in hexadecimal) in the LEDs":"Displaying a 4-bits fixed value (in hexadecimal) in the LEDs","03. Eight bits fixed value buses":"03. Eight bits fixed value buses","Using buses for displaying a fixed value in the LEDs":"Using buses for displaying a fixed value in the LEDs","04. Eight bits counter":"04. Eight bits counter","An 8-bit binary counter":"An 8-bit binary counter","05. Split buses":"05. Split buses","An 8-bit binary counter, using an 8-bit bus splitted\ninto two 4-bit buses":"An 8-bit binary counter, using an 8-bit bus splitted\ninto two 4-bit buses","06. ROM 16x8":"06. ROM 16x8","Displaying the contents of an 16x8 rom memory in the LEDs":"Displaying the contents of an 16x8 rom memory in the LEDs","07. ROM 16x8 file":"07. ROM 16x8 file","Displaying the contents of an 16x8 rom memory in the LEDs\nThe memory is read from the rom0.list file":"Displaying the contents of an 16x8 rom memory in the LEDs\nThe memory is read from the rom0.list file","08. ROM 16x8 file generic":"08. ROM 16x8 file generic","09. ROM 16x8 table":"09. ROM 16x8 table","Displaying the contents of an 16x8 rom memory in the LEDs  \nThe memory is read from the given table":"Displaying the contents of an 16x8 rom memory in the LEDs  \nThe memory is read from the given table"}}